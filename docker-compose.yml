version: '3.8'
services:
  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.encryptedSavedObjects.encryptionKey=your-secure-encryption-key-32-char-minimum
    ports:
      - "5601:5601"
    networks:
      - somenetwork
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - somenetwork
      # external network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=my_db
    ports:
      - "5432:5432"
    networks:
      - somenetwork
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - somenetwork
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - somenetwork
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # myapp:
  #     image: backend:latest
  #     container_name: myapp
  #     ports:
  #         - "3000:3000"
  #     networks:
  #         - somenetwork
  #     depends_on:
  #         - postgres
  #         - redis
  #         - rabbitmq
  #         - elasticsearch

networks:
  somenetwork:
    name: somenetwork
    driver: bridge
    external: true
